{"title":{"en":"F. Tree Queries","ru":"F. Древесные запросы"},"contestId":"1606","problemIndex":"F","timeLimit":{"en":"6 seconds","ru":"6 секунд"},"memLimit":{"en":"512 megabytes","ru":"512 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given a tree consisting of $$$n$$$ vertices. Recall that a tree is an undirected connected acyclic graph. The given tree is rooted at the vertex $$$1$$$.</p><p>You have to process $$$q$$$ queries. In each query, you are given a vertex of the tree $$$v$$$ and an integer $$$k$$$.</p><p>To process a query, you may delete any vertices from the tree in any order, except for the root and the vertex $$$v$$$. When a vertex is deleted, its children become the children of its parent. You have to process a query in such a way that maximizes the value of $$$c(v) - m \\cdot k$$$ (where $$$c(v)$$$ is the resulting number of children of the vertex $$$v$$$, and $$$m$$$ is the number of vertices you have deleted). Print the maximum possible value you can obtain.</p><p>The queries are independent: the changes you make to the tree while processing a query don't affect the tree in other queries.</p>","ru":"<p>Дано дерево, состоящее из $$$n$$$ вершин. Напомним, что дерево&nbsp;— это неориентированный ацикличный граф. Корнем данного дерева является вершина $$$1$$$.</p><p>Требуется обработать $$$q$$$ запросов. В каждом запросе задается вершина дерева $$$v$$$ и целое число $$$k$$$.</p><p>Для обработки запроса можно удалять вершины из дерева в произвольном порядке, кроме корня и вершины $$$v$$$. Когда вершина удаляется, ее дети становятся детьми ее родителя. Требуется обработать запрос так, чтобы максимизировать значение $$$c(v) - m \\cdot k$$$ (где $$$c(v)$$$&nbsp;— это итоговое количество детей вершины $$$v$$$, а $$$m$$$&nbsp;— это количество удаленных вершин). Выведите максимальное значение, которое можно получить.</p><p>Запросы независимые: изменения, произведенные над деревом при обработке запроса, не затрагивают другие запросы.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$)&nbsp;— the number of vertices in the tree.</p><p>Then $$$n-1$$$ lines follow, the $$$i$$$-th of them contains two integers $$$x_i$$$ and $$$y_i$$$ ($$$1 \\le x_i, y_i \\le n$$$; $$$x_i \\ne y_i$$$)&nbsp;— the endpoints of the $$$i$$$-th edge. These edges form a tree.</p><p>The next line contains one integer $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$)&nbsp;— the number of queries.</p><p>Then $$$q$$$ lines follow, the $$$j$$$-th of them contains two integers $$$v_j$$$ and $$$k_j$$$ ($$$1 \\le v_j \\le n$$$; $$$0 \\le k_j \\le 2 \\cdot 10^5$$$)&nbsp;— the parameters of the $$$j$$$-th query.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано одно число $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$)&nbsp;— количество вершин в дереве.</p><p>Затем следует $$$n-1$$$ строка, в $$$i$$$-й из них записаны два целых числа $$$x_i$$$ и $$$y_i$$$ ($$$1 \\le x_i, y_i \\le n$$$; $$$x_i \\ne y_i$$$)&nbsp;— концы $$$i$$$-го ребра. Данные ребра образуют дерево.</p><p>В следующей строке записано одно целое $$$q$$$ ($$$1 \\le q \\le 2 \\cdot 10^5$$$)&nbsp;— количество запросов.</p><p>Затем следуют $$$q$$$ строк, в $$$j$$$-й из них записаны два целых числа $$$v_j$$$ и $$$k_j$$$ ($$$1 \\le v_j \\le n$$$; $$$0 \\le k_j \\le 2 \\cdot 10^5$$$)&nbsp;— параметры $$$j$$$-го запроса.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each query, print one integer&nbsp;— the maximum value of $$$c(v) - m \\cdot k$$$ you can achieve.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>На каждый запрос выведите одно целое число&nbsp;— максимальное значение $$$c(v) - m \\cdot k$$$, которое можно получить.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>The tree in the first example is shown in the following picture:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/448dec03be7d13f0c5ce2a14bcfe3205ea51f7cc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>Answers to the queries are obtained as follows:</p><ol> <li> $$$v=1,k=0$$$: you can delete vertices $$$7$$$ and $$$3$$$, so the vertex $$$1$$$ has $$$5$$$ children (vertices $$$2$$$, $$$4$$$, $$$5$$$, $$$6$$$, and $$$8$$$), and the score is $$$5 - 2 \\cdot 0 = 5$$$; </li><li> $$$v=1,k=2$$$: you can delete the vertex $$$7$$$, so the vertex $$$1$$$ has $$$4$$$ children (vertices $$$3$$$, $$$4$$$, $$$5$$$, and $$$6$$$), and the score is $$$4 - 1 \\cdot 2 = 2$$$. </li><li> $$$v=1,k=3$$$: you shouldn't delete any vertices, so the vertex $$$1$$$ has only one child (vertex $$$7$$$), and the score is $$$1 - 0 \\cdot 3 = 1$$$; </li><li> $$$v=7,k=1$$$: you can delete the vertex $$$3$$$, so the vertex $$$7$$$ has $$$5$$$ children (vertices $$$2$$$, $$$4$$$, $$$5$$$, $$$6$$$, and $$$8$$$), and the score is $$$5 - 1 \\cdot 1 = 4$$$; </li><li> $$$v=5,k=0$$$: no matter what you do, the vertex $$$5$$$ will have no children, so the score is $$$0$$$; </li><li> $$$v=7,k=200000$$$: you shouldn't delete any vertices, so the vertex $$$7$$$ has $$$4$$$ children (vertices $$$3$$$, $$$4$$$, $$$5$$$, and $$$6$$$), and the score is $$$4 - 0 \\cdot 200000 = 4$$$. </li></ol>","ru":"<div class=\"section-title\">Примечание</div><p>Дерево в первом примере показано на следующем изображении:</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/448dec03be7d13f0c5ce2a14bcfe3205ea51f7cc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> </center><p>Ответы на запросы получаются следующим образом:</p><ol> <li> $$$v=1,k=0$$$: можно удалить вершины $$$7$$$ и $$$3$$$, так, чтобы у вершины $$$1$$$ стало $$$5$$$ детей (вершины $$$2$$$, $$$4$$$, $$$5$$$, $$$6$$$ и $$$8$$$), и счет равен $$$5 - 2 \\cdot 0 = 5$$$; </li><li> $$$v=1,k=2$$$: можно удалить вершину $$$7$$$, так, чтобы у вершины $$$1$$$ стало $$$4$$$ ребенка (вершины $$$3$$$, $$$4$$$, $$$5$$$ и $$$6$$$), и счет равен $$$4 - 1 \\cdot 2 = 2$$$. </li><li> $$$v=1,k=3$$$: не надо удалять вершины; тогда у вершины $$$1$$$ станет один ребенок (вершина $$$7$$$), и счет равен $$$1 - 0 \\cdot 3 = 1$$$; </li><li> $$$v=7,k=1$$$: можно удалить вершину $$$3$$$, так, чтобы у вершины $$$7$$$ стало $$$5$$$ детей (вершины $$$2$$$, $$$4$$$, $$$5$$$, $$$6$$$ и $$$8$$$), и счет равен $$$5 - 1 \\cdot 1 = 4$$$; </li><li> $$$v=5,k=0$$$: что бы вы ни делали, у вершины $$$5$$$ не будет детей, поэтому счет равен $$$0$$$; </li><li> $$$v=7,k=200000$$$: не надо удалять вершины; тогда у вершины $$$7$$$ станет $$$4$$$ ребенка (вершины $$$3$$$, $$$4$$$, $$$5$$$ и $$$6$$$), и счет равен $$$4 - 0 \\cdot 200000 = 4$$$. </li></ol>"},"sampleTestcases":[{"id":1635518325549,"input":"8\n6 7\n3 2\n8 3\n5 7\n7 4\n7 1\n7 3\n6\n1 0\n1 2\n1 3\n7 1\n5 0\n7 200000\n","output":"5\n2\n1\n4\n0\n4\n"}],"submitUrl":"https://codeforces.com/contest/1606/submit","language":"c++","isPartOfContest":true}