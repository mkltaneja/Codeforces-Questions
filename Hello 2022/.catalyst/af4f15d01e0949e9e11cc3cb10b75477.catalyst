{"title":{"en":"G. MinOr Tree","ru":"G. Дерево минимального ора"},"contestId":"1624","problemIndex":"G","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Recently, Vlad has been carried away by spanning trees, so his friends, without hesitation, gave him a connected weighted undirected graph of $$$n$$$ vertices and $$$m$$$ edges for his birthday.</p><p>Vlad defined the <span class=\"tex-font-style-it\">ority</span> of a spanning tree as the <a href=\"https://tiny.cc/bitwise_or\">bitwise OR</a> of all its weights, and now he is interested in what is the minimum possible <span class=\"tex-font-style-it\">ority</span> that can be achieved by choosing a certain spanning tree. A spanning tree is a connected subgraph of a given graph that does not contain cycles.</p><p>In other words, you want to keep $$$n-1$$$ edges so that the graph remains connected and the bitwise OR weights of the edges are as small as possible. You have to find the minimum bitwise OR itself.</p>","ru":"<p>В последнее время Влад увлёкся остовными деревьями, так что его друзья не долго думая подарили ему на день рождения связный взвешенный неориентированный граф из $$$n$$$ вершин и $$$m$$$ рёбер.</p><p>Влад определил <span class=\"tex-font-style-it\">орность</span> остовного дерева как <a href=\"https://tiny.cc/or_wiki/\">побитовое ИЛИ</a> всех его весов и теперь его интересует, какова минимальная возможная <span class=\"tex-font-style-it\">орность</span>, которой можно добиться, выбрав некоторое остовное дерево. Остовное дерево&nbsp;— связный подграф данного графа, не содержащий циклов.</p><p>Иными словами вы хотите оставить $$$n-1$$$ ребро, так чтобы граф остался связным и побитовое ИЛИ весов рёбер было как можно меньше. Вы должны найти само побитовое ИЛИ.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases in the input.</p><p>An empty line is written in front of each test case.</p><p>This is followed by two numbers $$$n$$$ and $$$m$$$ ($$$3 \\le n \\le 2 \\cdot 10^5, n - 1 \\le m \\le 2 \\cdot 10^5$$$) — the number of vertices and edges of the graph, respectively.</p><p>The next $$$m$$$ lines contain the description of the edges. Line $$$i$$$ contains three numbers $$$v_i$$$, $$$u_i$$$ and $$$w_i$$$ ($$$1 \\le v_i, u_i \\le n$$$, $$$1 \\le w_i \\le 10^9$$$, $$$v_i \\neq u_i$$$) — the vertices that the edge connects and its weight.</p><p>It is guaranteed that the sum $$$m$$$ and the sum $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$ and each test case contains a connected graph.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке входных данных записано целое число $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — количество наборов входных данных в тесте.</p><p>Перед каждым набором в тесте записана пустая строка. </p><p>Далее следуют два числа $$$n$$$ и $$$m$$$ ($$$3 \\le n \\le 2 \\cdot 10^5, n - 1 \\le m \\le 2 \\cdot 10^5$$$) — количество вершин и рёбер графа, соответственно.</p><p>Следующие $$$m$$$ строк содержат описание рёбер. Строка $$$i$$$ содержит три числа $$$v_i$$$, $$$u_i$$$ и $$$w_i$$$ ($$$1 \\le v_i, u_i \\le n$$$, $$$1 \\le w_i \\le 10^9$$$, $$$v_i \\neq u_i$$$) — вершины, которые соединяет ребро, и его вес.</p><p>Гарантируется, что сумма $$$m$$$ и сумма $$$n$$$ по всем наборам входных данных не превосходит $$$2 \\cdot 10^5$$$ и каждый тест содержит связный граф.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Print $$$t$$$ lines, each of which contains the answer to the corresponding set of input data&nbsp;— the minimum possible spanning tree <span class=\"tex-font-style-it\">ority</span>.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите $$$t$$$ строк, каждая из которых содержит ответ на соответствующий набор входных данных&nbsp;— минимальную возможную <span class=\"tex-font-style-it\">орность</span> остовного дерева.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/8742531632c6da018dbeff32c1ee5dac9389435e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\">Graph from the first test case.</span> </center><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/af2d6e2c50daa1dff26beb34d7dc4e1e2569aadb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\"><span class=\"tex-font-style-it\">Ority</span> of this tree equals to <span class=\"tex-font-style-tt\">2 or 2 = 2</span> and it's minimal.</span> </center><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/b82b9d172399f9ee9cc2e8e94a3905da51bc7031.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\">Without excluding edge with weight $$$1$$$ <span class=\"tex-font-style-it\">ority</span> is <span class=\"tex-font-style-tt\">1 or 2 = 3</span>.</span> </center>","ru":"<div class=\"section-title\">Примечание</div><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/8742531632c6da018dbeff32c1ee5dac9389435e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\">Изначальный граф из первого примера.</span> </center><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/af2d6e2c50daa1dff26beb34d7dc4e1e2569aadb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\"><span class=\"tex-font-style-it\">Орность</span> такого дерева равна <span class=\"tex-font-style-tt\">2 or 2 = 2</span> и является оптимальной.</span> </center><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/b82b9d172399f9ee9cc2e8e94a3905da51bc7031.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"340px\"> <span class=\"tex-font-size-small\">Оставив ребро веса $$$1$$$ мы получим <span class=\"tex-font-style-it\">орность</span> <span class=\"tex-font-style-tt\">1 or 2 = 3</span>.</span> </center>"},"sampleTestcases":[{"id":1641825517452,"input":"3\n\n3 3\n1 2 1\n2 3 2\n1 3 2\n\n5 7\n4 2 7\n2 5 8\n3 4 2\n3 2 1\n2 4 2\n4 1 2\n1 2 2\n\n3 4\n1 2 1\n2 3 2\n1 3 3\n3 1 4\n","output":"2\n10\n3\n"}],"submitUrl":"https://codeforces.com/contest/1624/submit","language":"c++","isPartOfContest":true}